name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_lint-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-16.04, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install rust
        uses: hecrj/setup-rust-action@v1.3.3
        with:
          rust-version: '1.43.0'

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Install Deno
        if: contains(matrix.os, 'ubuntu')
        uses: denolib/setup-deno@master
        with:
          deno-version: v1.x

      - name: Install Node.js
        if: contains(matrix.os, 'ubuntu')
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'

      - name: Install npm packages
        if: contains(matrix.os, 'ubuntu')
        run: npm install --ci
        working-directory: benchmarks

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '2.7'
          architecture: x64

      - name: Remove unused versions of Python
        if: startsWith(matrix.config.os, 'windows')
        run: |-
          $env:PATH -split ";" |
            Where-Object { Test-Path "$_\python.exe" } |
            Select-Object -Skip 1 |
            ForEach-Object { Move-Item "$_" "$_.disabled" }

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ matrix.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: Environment
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUST_BACKTRACE::full

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: python ./tools/format.py

      - name: Build
        run: cargo build --locked --release --all-targets

      - name: Test
        run: cargo test --locked --release --all-targets

      - name: Lint
        run: python ./tools/lint.py

      - name: Benchmarks
        if: contains(matrix.os, 'ubuntu')
        run: deno run -A --quiet benchmarks/benchmarks.ts

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -vv
