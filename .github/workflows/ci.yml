name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_lint-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-20.04-xl, windows-2019]

    env:
      CARGO_INCREMENTAL: 0
      GH_ACTIONS: 1
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: true
          persist-credentials: false

      - uses: dtolnay/rust-toolchain@stable

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: latest

      - name: Install Node.js
        if: contains(matrix.os, 'ubuntu')
        uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      - name: Install npm packages
        if: contains(matrix.os, 'ubuntu')
        run: npm install --ci
        working-directory: benchmarks

      - name: Rust cache
        uses: Swatinem/rust-cache@v1

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: deno run --allow-run ./tools/format.ts --check

      - name: Build
        run: cargo build --locked --release --all-targets --all-features

      - name: Test
        run: |
          cargo test --locked --release --all-targets --all-features
          deno test --unstable --allow-read=. --allow-write=. --allow-run --allow-env ./tools

      - name: Lint
        if: contains(matrix.os, 'ubuntu')
        run: deno run --allow-run ./tools/lint.ts --release

      - name: Benchmarks
        if: contains(matrix.os, 'ubuntu')
        run: deno run -A --quiet benchmarks/benchmarks.ts

      - name: Pre-release (linux)
        if: |
          contains(matrix.os, 'ubuntu')
        run: |
          cd target/release/examples
          zip -r dlint-x86_64-unknown-linux-gnu.zip dlint

      - name: Pre-release (mac)
        if: |
          contains(matrix.os, 'macOS')
        run: |
          cd target/release/examples
          zip -r dlint-x86_64-apple-darwin.zip dlint

      - name: Pre-release (windows)
        if: |
          contains(matrix.os, 'windows')
        run: |
          Compress-Archive -CompressionLevel Optimal -Force -Path target/release/examples/dlint.exe -DestinationPath target/release/examples/dlint-x86_64-pc-windows-msvc.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: |
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/examples/dlint-x86_64-pc-windows-msvc.zip
            target/release/examples/dlint-x86_64-unknown-linux-gnu.zip
            target/release/examples/dlint-x86_64-apple-darwin.zip
          draft: true

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -vv
