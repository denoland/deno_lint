name: ci

on: [push, pull_request]

jobs:
  rust:
    name: rust-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-16.04, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v1

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.42.0"

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Cache
        uses: actions/cache@v1
        with:
          path: target/
          key: ${{ matrix.config.os }}-${{ hashFiles('Cargo.lock') }}

      - name: Environment
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUST_BACKTRACE::full

      - name: lint
        run: cargo clippy --all-targets --locked -- -D clippy::all

      - name: format
        run: rustfmt --check src/main.rs

      - name: test
        run: cargo test --locked --all-targets
