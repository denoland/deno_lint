name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_lint-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest-xl, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - name: Install rust
        uses: hecrj/setup-rust-action@v1.3.3
        with:
          rust-version: "1.46.0"

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Install Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: v1.4.4

      - name: Install Node.js
        if: contains(matrix.os, 'ubuntu')
        uses: actions/setup-node@v2-beta
        with:
          node-version: "12"

      - name: Install npm packages
        if: contains(matrix.os, 'ubuntu')
        run: npm install --ci
        working-directory: benchmarks

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-

      - name: Environment
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUST_BACKTRACE::full

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: deno run --allow-run ./tools/format.ts --check

      - name: Build
        run: cargo build --locked --release --all-targets

      - name: Test
        run: cargo test --locked --release --all-targets

      - name: Lint
        run: deno run --allow-run ./tools/lint.ts --release

      - name: Benchmarks
        if: contains(matrix.os, 'ubuntu')
        run: deno run -A --quiet benchmarks/benchmarks.ts

      - name: Generate rules json
        if: contains(matrix.os, 'ubuntu')
        run: target/release/examples/dlint rules --json > docs.json

      - name: Build website
        if: contains(matrix.os, 'ubuntu')
        run: |
          yarn
          yarn build
          deno run --allow-read --allow-write --allow-env --allow-net --allow-run --unstable --no-check https://deno.land/x/dext@0.8.1/cli.ts build
        working-directory: ./www

      - name: Upload website to Github Actions Artifacts
        if: contains(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: www
          path: ./www/.dext/static

      - name: Deploy website
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_lint'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          echo $NETLIFY_AUTH_TOKEN
          yarn global add netlify-cli
          netlify deploy --dir=./www/.dext/static --site def7a3c7-172e-4e2a-bc4f-601a5301403f --auth $NETLIFY_AUTH_TOKEN --prod

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -vv
