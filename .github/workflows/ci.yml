name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_lint-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest-xl, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - name: Install rust
        uses: hecrj/setup-rust-action@v1.3.4
        with:
          rust-version: 1.48.0

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Install Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: v1.4.4

      - name: Install Node.js
        if: contains(matrix.os, 'ubuntu')
        uses: actions/setup-node@v2-beta
        with:
          node-version: "12"

      - name: Install npm packages
        if: contains(matrix.os, 'ubuntu')
        run: npm install --ci
        working-directory: benchmarks

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-

        # It seems that the 'target' directory does not always get restored
        # from cache correctly on MacOS. In the build log we see the following:
        #
        #   Fresh serde_derive v1.0.115
        #
        # But a little while after that Cargo aborts because 'serde_derive' is
        # now nowhere to be found. We're not the only ones experiencing this,
        # see https://github.com/actions-rs/cargo/issues/111.
        #
        #   error[E0463]: can't find crate for `serde_derive`
        #   ##[error]   --> /Users/runner/.cargo/registry/src/github.com-
        #       |           1ecc6299db9ec823/serde-1.0.115/src/lib.rs:285:1
        #       |
        #   285 | extern crate serde_derive;
        #       | ^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate
      - name: Work around MacOS + Cargo + Github Actions cache bug
        if: runner.os == 'macOS'
        run: |
          cargo clean --locked --release \
                      -p ast_node \
                      -p is-macro \
                      -p serde_derive \
                      -p swc_ecma_parser \
                      -p swc_ecma_parser_macros \
                      -p swc_visit \
                      -p swc_visit_macros \
                      -p derive_more

      - name: Environment
        run: |
          echo "GH_ACTIONS=1" >> ${GITHUB_ENV}
          echo "RUST_BACKTRACE=full" >> ${GITHUB_ENV}

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: deno run --allow-run ./tools/format.ts --check

      - name: Build
        run: cargo build --locked --release --all-targets

      - name: Test
        run: cargo test --locked --release --all-targets

      - name: Lint
        run: deno run --allow-run ./tools/lint.ts --release

      - name: Benchmarks
        if: contains(matrix.os, 'ubuntu')
        run: deno run -A --quiet benchmarks/benchmarks.ts

      - name: Generate rules json
        if: contains(matrix.os, 'ubuntu')
        run: target/release/examples/dlint rules --json --all > docs.json

      - name: Build website
        if: contains(matrix.os, 'ubuntu')
        run: |
          yarn
          yarn build
          deno run --allow-read --allow-write --allow-env --allow-net --allow-run --unstable --no-check https://deno.land/x/dext@0.8.1/cli.ts build
        working-directory: ./www

      - name: Upload website to Github Actions Artifacts
        if: contains(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: www
          path: ./www/.dext/static

      - name: Deploy website
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_lint' &&
          github.ref == 'refs/heads/master'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          yarn global add netlify-cli
          netlify status --auth=$NETLIFY_AUTH_TOKEN
          netlify deploy --dir=./www/.dext/static --site=def7a3c7-172e-4e2a-bc4f-601a5301403f --auth=$NETLIFY_AUTH_TOKEN --prod

      - name: Pre-release (linux)
        if: |
          contains(matrix.os, 'ubuntu')
        run: |
          cd target/release/examples
          zip -r dlint-x86_64-unknown-linux-gnu.zip dlint
      
      - name: Pre-release (mac)
        if: |
          contains(matrix.os, 'macOS')
        run: |
          cd target/release/examples
          zip -r dlint-x86_64-apple-darwin.zip dlint

      - name: Pre-release (windows)
        if: |
          contains(matrix.os, 'windows')
        run: |
          Compress-Archive -CompressionLevel Optimal -Force -Path target/release/examples/dlint.exe -DestinationPath target/release/examples/dlint-x86_64-pc-windows-msvc.zip
      
      - name: Release
        uses: softprops/action-gh-release@v1
        if: |
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/examples/dlint-x86_64-pc-windows-msvc.zip
            target/release/examples/dlint-x86_64-unknown-linux-gnu.zip
            target/release/examples/dlint-x86_64-apple-darwin.zip
          draft: true

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish -vv
