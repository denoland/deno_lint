name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_lint-${{ matrix.os }}
    if: |
      github.event_name == 'push' ||
      !startsWith(github.event.pull_request.head.label, 'denoland:')
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-16.04, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: "1.43.0"

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Install Deno (benchmark only)
        if: contains(matrix.os, 'ubuntu')
        uses: denolib/setup-deno@master
        with:
          deno-version: v1.x

      - name: Install Node.js (benchmark only)
        if: contains(matrix.os, 'ubuntu')
        uses: actions/setup-node@v2-beta
        with:
          node-version: "12"

      - name: Install npm packages (benchmark only)
        if: contains(matrix.os, 'ubuntu')
        run: npm install --ci
        working-directory: benchmarks

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ matrix.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: Environment
        run: |
          echo ::set-env name=GH_ACTIONS::1
          echo ::set-env name=RUST_BACKTRACE::full

      - name: Format
        run: rustfmt --check src/main.rs

      - name: Build
        run: cargo build --locked --release --all-targets

      - name: Test
        run: cargo test --locked --release --all-targets

      - name: Lint
        run: cargo clippy --all-targets --release --locked -- -D clippy::all

      - name: Benchmarks
        if: contains(matrix.os, 'ubuntu')
        run: deno -A benchmarks/benchmarks.ts

      - name: Pre-release (linux)
        if: |
          contains(matrix.os, 'ubuntu')
        run: |
          cd target/release
          zip -r deno_lint-x86_64-unknown-linux-gnu.zip deno_lint

      - name: Pre-release (mac)
        if: |
          contains(matrix.os, 'macOS')
        run: |
          cd target/release
          zip -r deno_lint-x86_64-apple-darwin.zip deno_lint

      - name: Pre-release (windows)
        if: |
          contains(matrix.os, 'windows')
        run: |
          Compress-Archive -CompressionLevel Optimal -Force -Path target/release/deno_lint.exe -DestinationPath target/release/deno_lint-x86_64-pc-windows-msvc.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: |
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/deno_lint-x86_64-pc-windows-msvc.zip
            target/release/deno_lint-x86_64-unknown-linux-gnu.zip
            target/release/deno_lint-x86_64-apple-darwin.zip
          draft: true

      - name: Publish
        if: |
          contains(matrix.os, 'ubuntu') &&
          github.repository == 'denoland/deno_lint' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish

